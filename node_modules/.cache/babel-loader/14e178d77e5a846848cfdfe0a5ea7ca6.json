{"ast":null,"code":"var _jsxFileName = \"/home/nineleaps/Documents/maze/src/components/maze.js\";\nimport React, { Component } from 'react';\nimport './maze.css';\nexport default class maze extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      positionX: 0,\n      positionY: 0\n    };\n  }\n\n  componentWillMount() {\n    document.addEventListener(\"keydown\", this.onKeyPressed.bind(this));\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener(\"keydown\", this.onKeyPressed.bind(this));\n  }\n\n  render() {\n    const _this$state = this.state,\n          positionX = _this$state.positionX,\n          positionY = _this$state.positionY;\n    const maze = [[0, 0, 0, 0, 0, 0, 0, 1, 0, 1], [0, 0, 1, 0, 0, 0, 0, 1, 0, 1], [0, 0, 0, 0, 0, 1, 0, 1, 0, 1], [0, 0, 0, 1, 0, 0, 0, 0, 0, 1], [0, 0, 0, 0, 0, 0, 0, 0, 0, 1], [0, 0, 0, 0, 0, 0, 0, 1, 0, 0], [0, 0, 0, 1, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 1], [0, 0, 0, 0, 0, 1, 0, 0, 0, 1], [0, 0, 0, 0, 0, 0, 0, 0, 0, 1]];\n    const mazebox = maze.map((mazelist, outerlist) => {\n      return mazelist.map((box, innerlist) => {\n        if (positionX == outerlist && positionY == innerlist) {\n          return React.createElement(\"li\", {\n            className: \"player\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 36\n            },\n            __self: this\n          });\n        }\n\n        return React.createElement(\"li\", {\n          className: \"\".concat(box === 0 ? 'unfilled' : 'filled'),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 40\n          },\n          __self: this\n        });\n      });\n    });\n    return React.createElement(\"div\", {\n      className: \"maze-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, mazebox);\n  }\n\n}","map":{"version":3,"sources":["/home/nineleaps/Documents/maze/src/components/maze.js"],"names":["React","Component","maze","state","positionX","positionY","componentWillMount","document","addEventListener","onKeyPressed","bind","componentWillUnmount","removeEventListener","render","mazebox","map","mazelist","outerlist","box","innerlist"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport './maze.css'\nexport default class maze extends Component {\n    state={\n        positionX:0,\n        positionY:0\n    }\n    componentWillMount() {\n        document.addEventListener(\"keydown\", this.onKeyPressed.bind(this));\n    }\n  \n    componentWillUnmount() {\n        document.removeEventListener(\"keydown\", this.onKeyPressed.bind(this));\n    }      \n  \n  render() {\n      const {positionX,positionY}=this.state;\n      const  maze=[\n          [0,0,0,0,0,0,0,1,0,1],\n          [0,0,1,0,0,0,0,1,0,1],\n          [0,0,0,0,0,1,0,1,0,1],\n          [0,0,0,1,0,0,0,0,0,1],\n          [0,0,0,0,0,0,0,0,0,1],\n          [0,0,0,0,0,0,0,1,0,0],\n          [0,0,0,1,0,0,0,0,0,0],\n          [0,0,0,0,0,0,0,0,0,1],\n          [0,0,0,0,0,1,0,0,0,1],\n          [0,0,0,0,0,0,0,0,0,1]\n\n    ];\n\n    const mazebox=maze.map((mazelist,outerlist)=>{\n       return(mazelist.map((box,innerlist)=>{\n           if(positionX==outerlist&&positionY==innerlist){\n               return (\n                   <li className=\"player\"></li>\n               )\n           }\n            return(\n                <li className={`${box===0?'unfilled':'filled'}`}></li>\n            )\n        }))\n    })\n    return (\n      <div className=\"maze-container\">\n{mazebox}\n        \n      </div>\n    )\n  }\n}\n"]},"metadata":{},"sourceType":"module"}