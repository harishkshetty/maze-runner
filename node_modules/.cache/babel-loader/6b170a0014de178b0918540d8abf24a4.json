{"ast":null,"code":"var _jsxFileName = \"/home/nineleaps/Documents/maze/src/components/maze.js\";\nimport React, { Component } from 'react';\nimport './maze.css';\nexport default class maze extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      positionX: 0,\n      positionY: 0,\n      winner: false,\n      show: false,\n      steps: 0,\n      maze: [[0, 1, 0, 0, 0, 0, 0, 1, 0, 1], [0, 1, 1, 0, 0, 1, 0, 1, 0, 1], [0, 1, 0, 0, 1, 1, 0, 1, 0, 1], [0, 1, 0, 1, 1, 0, 0, 0, 0, 1], [0, 1, 0, 0, 1, 0, 0, 0, 0, 1], [0, 0, 0, 0, 0, 0, 0, 1, 0, 1], [0, 0, 1, 1, 0, 0, 0, 0, 0, 1], [0, 0, 1, 0, 0, 1, 0, 0, 0, 1], [0, 0, 1, 0, 0, 1, 0, 0, 0, 0], [0, 0, 1, 0, 0, 1, 0, 0, 0, 1]]\n    };\n\n    this.checkPosibility = (x, y) => {\n      const maze = this.state.maze;\n\n      if (maze[x][y] === 1) {\n        return false;\n      }\n\n      return true;\n    };\n\n    this.movePlayer = ({\n      keyCode\n    }) => {\n      const _this$state = this.state,\n            positionX = _this$state.positionX,\n            positionY = _this$state.positionY,\n            maze = _this$state.maze;\n      const _this$props = this.props,\n            modalshow = _this$props.modalshow,\n            steps = _this$props.steps;\n      let newPositionX = positionX;\n      let newPositionY = positionY;\n\n      if (keyCode === 38) {\n        //Up\n        // console.log('Up');\n        if (positionX > 0 && this.checkPosibility(positionX - 1, positionY)) {\n          newPositionX = positionX - 1;\n        }\n      } else if (keyCode === 37) {\n        //Left\n        // console.log('Left');\n        if (positionY > 0 && this.checkPosibility(positionX, positionY - 1)) {\n          newPositionY = positionY - 1;\n        }\n      } else if (keyCode === 39) {\n        //right\n        // console.log('Right');\n        if (positionY < maze.length - 1 && this.checkPosibility(positionX, positionY + 1)) {\n          newPositionY = positionY + 1;\n        }\n      } else if (keyCode === 40) {\n        //bottom\n        if (positionX < maze.length - 1 && this.checkPosibility(positionX + 1, positionY)) {\n          newPositionX = positionX + 1;\n        }\n      }\n\n      this.setState(prev => {\n        return {\n          steps: prev.steps + 1\n        };\n      });\n      this.setState({\n        positionX: newPositionX,\n        positionY: newPositionY\n      }, () => {\n        if (this.state.positionY >= maze.length - 1) {\n          this.setState({\n            winner: true,\n            positionX: 0,\n            positionY: 0\n          });\n          modalshow();\n        } else {\n          this.setState({\n            winner: false\n          });\n        }\n      });\n    };\n  }\n\n  componentWillMount() {\n    document.addEventListener(\"keydown\", this.movePlayer.bind(this));\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener(\"keydown\", this.movePlayer.bind(this));\n  }\n\n  render() {\n    const _this$state2 = this.state,\n          positionX = _this$state2.positionX,\n          positionY = _this$state2.positionY,\n          maze = _this$state2.maze,\n          winner = _this$state2.winner;\n    const mazebox = maze.map((mazelist, outerlist) => {\n      return mazelist.map((box, innerlist) => {\n        if (positionX == outerlist && positionY == innerlist) {\n          return React.createElement(\"li\", {\n            key: \"player\",\n            className: \"player\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 98\n            },\n            __self: this\n          });\n        }\n\n        return React.createElement(\"li\", {\n          key: \"\".concat(innerlist, \"box\"),\n          className: \"\".concat(box === 0 ? 'unfilled' : 'filled'),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 102\n          },\n          __self: this\n        });\n      });\n    });\n    return React.createElement(\"div\", {\n      className: \"maze-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }, React.createElement(\"h4\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }, \"Maze Runner\"), mazebox);\n  }\n\n}","map":{"version":3,"sources":["/home/nineleaps/Documents/maze/src/components/maze.js"],"names":["React","Component","maze","state","positionX","positionY","winner","show","steps","checkPosibility","x","y","movePlayer","keyCode","props","modalshow","newPositionX","newPositionY","length","setState","prev","componentWillMount","document","addEventListener","bind","componentWillUnmount","removeEventListener","render","mazebox","map","mazelist","outerlist","box","innerlist"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport './maze.css'\nexport default class maze extends Component {\n    state={\n        positionX:0,\n        positionY:0,\n        winner:false,\n        show:false,\n        steps:0,\n        maze:[[0,1,0,0,0,0,0,1,0,1],\n        [0,1,1,0,0,1,0,1,0,1],\n        [0,1,0,0,1,1,0,1,0,1],\n        [0,1,0,1,1,0,0,0,0,1],\n        [0,1,0,0,1,0,0,0,0,1],\n        [0,0,0,0,0,0,0,1,0,1],\n        [0,0,1,1,0,0,0,0,0,1],\n        [0,0,1,0,0,1,0,0,0,1],\n        [0,0,1,0,0,1,0,0,0,0],\n        [0,0,1,0,0,1,0,0,0,1]]\n    }\n    componentWillMount() {\n        document.addEventListener(\"keydown\", this.movePlayer.bind(this));\n    }\n  \n    componentWillUnmount() {\n        document.removeEventListener(\"keydown\", this.movePlayer.bind(this));\n    }      \n  \n    checkPosibility = (x,y) => {\n        const { maze} = this.state;\n        if(maze[x][y] === 1) {\n          return false;\n        }\n        return true;\n      }\n     \n      movePlayer = ({keyCode}) => {\n        const { positionX, positionY, maze } = this.state;\n        const {modalshow,steps}=this.props;\n     \n        let newPositionX = positionX;\n        let newPositionY = positionY;\n     \n        if(keyCode === 38) {\n          //Up\n          // console.log('Up');\n          if( positionX > 0 && this.checkPosibility(positionX - 1, positionY)) {\n            newPositionX = positionX-1;\n          }\n     \n        } else if(keyCode === 37) {\n          //Left\n          // console.log('Left');\n          if( positionY > 0 && this.checkPosibility(positionX, positionY - 1)) {\n            newPositionY = positionY-1;\n          }\n        } else if(keyCode === 39) {\n          //right\n          // console.log('Right');\n          if( positionY < maze.length-1 && this.checkPosibility(positionX, positionY + 1)) {\n            newPositionY = positionY+1;\n          }\n        } else if(keyCode === 40) {\n          //bottom\n\n          if( positionX < maze.length-1 && this.checkPosibility(positionX +1 , positionY)) {\n            newPositionX = positionX + 1;\n          }\n        }\n     \n        this.setState((prev)=>{\n            return {steps:prev.steps+1}\n        })\n        this.setState({positionX: newPositionX,positionY: newPositionY},()=>{\n            if(this.state.positionY>=maze.length-1){\n                this.setState({winner:true,positionX:0,positionY:0});\n                modalshow();\n\n            }\n            else{\n                this.setState({winner:false})\n\n            }\n        })\n      \n      \n     \n      }\n  render() {\n      const {positionX,positionY,maze,winner}=this.state;\n\n    const mazebox=maze.map((mazelist,outerlist)=>{\n       return(mazelist.map((box,innerlist)=>{\n           \n           if(positionX==outerlist&&positionY==innerlist){\n\n               return (\n                   <li key='player' className=\"player\"></li>\n               )\n           }\n            return(\n                <li key={`${innerlist}box`} className={`${box===0?'unfilled':'filled'}`}></li>\n            )\n        }))\n    })\n    return (\n      <div className=\"maze-container\">\n      <h4>Maze Runner</h4>\n{mazebox}\n      </div>\n    )\n  }\n}\n"]},"metadata":{},"sourceType":"module"}